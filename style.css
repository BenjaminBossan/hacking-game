/* Base reset */
:root {
  --timer-default-color: #00ffea;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}

/* Overall body style */
body {
  font-family: 'Roboto Mono', monospace;
  color: #e0e0e0;
  text-align: center;
  padding: 20px;
  min-height: 100vh; /* Ensure the body is at least the viewport height */
  background: linear-gradient(135deg, #121212, #1e1e1e);
  background-size: cover; /* Cover the entire viewport */
  background-attachment: fixed; /* Keep the background fixed during scroll */
}

/* Header styling */
header h1 {
  font-family: 'Orbitron', sans-serif;
  font-size: 2.5rem;
  margin-bottom: 10px;
  color: #00ffff;
  text-shadow: 0 0 10px #00ffff;
}

/* Controls styling */
.controls {
  margin: 10px auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
}

.controls button {
  background: #222;
  color: #00ffea;
  border: 2px solid #00ffea;
  padding: 5px 10px;
  font-size: 1rem;
  border-radius: 4px;
  transition: background 0.3s, transform 0.3s;
}
.controls button:hover {
  background: #00ffea;
  color: #222;
  transform: scale(1.05);
}

.button-group {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
}

#stopBtn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

#showSolutionBtn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

#nextRoundBtn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

#nextRoundBtn:not(:disabled) {
  background: #FFFF44;
  color: #222;
  border-color: #FFFF44;
  box-shadow: 0 0 5px #FFFF44;
}

#topInfoRow {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-bottom: 10px;
}

#topInfoRow {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 6;
  flex-wrap: wrap;
  margin-bottom: 8px;
}

.top-info-item,
#timer {
  flex: 1 1 200;
  text-align: center;
  font-family: var(--timer-font), monospace;
  font-size: 1.2rem;
  color: var(--timer-default-color);
  margin: 0;
}

/* Game container: only the board, centered */
.game-container {
  width: 100%;
  margin: 20px auto;
}

/* Board container */
#boardContainer {
  position: relative;
  margin: 0 auto;
  text-align: center;
  /* The width is set dynamically by JS */
}

/* Board styling */
#board {
  display: grid;
  gap: 2px;
  margin: 0 auto;
  transition: transform 0.3s;
  /* grid-template-columns is set dynamically in script.js */
}

/* Overlay for drawing the path */
#overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

@keyframes drawLine {
  from {
    stroke-dashoffset: var(--line-length);
  }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes pulsateGlow {
  0%, 100% {
    filter: drop-shadow(0 0 5px #FFFF44);
  }
  50% {
    filter: drop-shadow(0 0 10px #FFFF44);
  }
}

.info-line {
  margin: 5px 0;
}

/* Status message colors */
#messageLine.win {
  color: #00ffea;
}
#messageLine.lose {
  color: #ff0033;
}

/* Scoreboard and high score display styling */
#scoreboard {
  margin-top: 10px;
  font-size: 1.2rem;
}
#message {
  margin-top: 10px;
  font-size: 1.2rem;
  color: #ff0033;
  font-weight: bold;
}

/* Score history styling: now placed at the very bottom */
#scoreHistory {
  max-width: 300px;
  margin: 20px auto 0;
  text-align: left;
}
#historyTable {
  width: 100%;
  border-collapse: collapse;
  background: #222;
  border: 1px solid #00ffea;
}
#historyTable th, #historyTable td {
  border: 1px solid #00ffea;
  padding: 8px;
  text-align: center;
  font-size: 0.9rem;
}
#historyTable th {
  background-color: #333;
}
#historyTable tr.fail {
  background-color: #131313;
  color: #fff;
}

#highScore {
  color: #FFFF44;
  font-size: 1rem;
}

/* Board Tiles */
.tile {
  background: #333;
  width: 50px;
  height: 50px;
  line-height: 50px;
  font-size: 1.2rem;
  color: #e0e0e0;
  user-select: none;
  position: relative;
  transition: background 0.2s, transform 0.2s;
}
.tile:hover {
  transform: scale(1.05);
}
.tile-top, .tile-bottom {
  background: #444;
}
.tile.selected {
  background: #00ffea !important;
  color: #222;
  box-shadow: 0 0 10px #00ffea;
}
.tile.legal {
  outline: 2px solid #00ffea;
}
.tile.solution {
  background: #ff00ff !important;
  color: #222;
  box-shadow: 0 0 10px #ff00ff;
}
.tile.selected.solution {
  background: #8989dd !important;
  color: #222 !important;
  box-shadow: 0 0 10px #8989dd !important;
}

/* Style for the sound toggle button */
#toggleSound {
  background: #222;
  color: #00ffea;
  border: 2px solid #00ffea;
  padding: 10px 15px;
  font-size: 1rem;
  border-radius: 4px;
  cursor: pointer;
  transition: background 0.3s, transform 0.3s;
}

/* When sound is enabled, highlight the button */
#toggleSound.active {
  background: #00ffea;
  color: #222;
}

/* Help Modal styling */
#helpModal {
  display: none;
  position: fixed;
  z-index: 20;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.85);
}
#helpContent {
  background: #111;
  margin: 10% auto;
  padding: 20px;
  width: 90%;
  max-width: 600px;
  border-radius: 8px;
  color: #e0e0e0;
  text-align: left;
  box-shadow: 0 0 20px #00ffea;
}
#helpContent h2 {
  font-family: 'Orbitron', sans-serif;
  text-align: center;
  color: #00ffff;
  margin-bottom: 10px;
}
#helpContent p,
#helpContent ul,
#helpContent li {
  font-family: 'Roboto Mono', monospace;
  font-size: 0.9rem;
  line-height: 1.4;
  margin-bottom: 8px;
}
#helpContent ul {
  list-style: disc inside;
  margin-left: 20px;
}
#helpContent a {
  color: #00ffea;
  text-decoration: none;
}
#helpContent a:hover {
  text-decoration: underline;
}
#helpContent button {
  display: block;
  margin: 20px auto 0;
  padding: 10px 20px;
  background: #00ffea;
  color: #222;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
  transition: background 0.3s, transform 0.3s;
}
#helpContent button:hover {
  background: #00ffff;
  transform: scale(1.05);
}

#tooltip {
  background: rgba(0, 0, 0, 0.7);
  color: #00ffea;
  font-family: 'Roboto Mono', monospace;
  font-size: 0.9rem;
  padding: 5px 8px;
  border: 1px solid #00ffea;
  border-radius: 4px;
  box-shadow: 0 0 5px #00ffea;
  transition: opacity 0.2s;
  opacity: 0;
  z-index: 100;
}

/* Responsive Design */
@media (max-width: 600px) {
  header h1 {
    font-size: 2rem;
  }
  .controls button {
    font-size: 0.9rem;
    padding: 8px 10px;
  }
  #board .tile {
    width: 40px;
    height: 40px;
    line-height: 40px;
    font-size: 1rem;
  }
  #scoreHistory {
    max-width: 100%;
  }
  #helpContent {
    width: 95%;
    max-width: 90%;
  }
}

/*******************************/
/* Glitch Effect for Game Over */
/*******************************/

@keyframes glitch-anim-1 {
  0%, 100% {clip-path: inset(0 0 98% 0); }
  20% {clip-path: inset(33% 0 66% 0); }
  40% {clip-path: inset(66% 0 33% 0); }
  60% {clip-path: inset(33% 0 66% 0); }
  80% {clip-path: inset(10% 0 90% 0); }
}

@keyframes glitch-anim-2 {
  0%, 100% {
    clip-path: inset(0 98% 0 0);
  }
  25% {
    clip-path: inset(0 33% 0 66%);
  }
  50% {
    clip-path: inset(0 66% 0 33%);
  }
  75% {
    clip-path: inset(0 33% 0 66%);
  }
}

@keyframes noise-anim {
  0% { background-position: 0% 0%; }
  10% { background-position: -5% -10%; }
  20% { background-position: -15% 5%; }
  30% { background-position: 7% -25%; }
  40% { background-position: 20% 25%; }
  50% { background-position: -25% 10%; }
  60% { background-position: 15% 5%; }
  70% { background-position: 0% 15%; }
  80% { background-position: 25% 35%; }
  90% { background-position: -10% 10%; }
  100% { background-position: 0% 0%; }
}

@keyframes glitch-skew {
  0%, 100% { transform: skew(0deg); }
  25% { transform: skew(2deg); }
  50% { transform: skew(-1deg); }
  75% { transform: skew(3deg); }
}

@keyframes scan-line {
  0% { top: -100%; }
  100% { top: 100%; }
}

@keyframes flicker {
  0%, 100% { opacity: 1; }
  33% { opacity: 0.8; }
  66% { opacity: 0.4; }
  77% { opacity: 0.6; }
  88% { opacity: 0.2; }
}

@keyframes pixel-shift {
  0%, 100% { transform: translate(0); }
  10% { transform: translate(2px, 0); }
  20% { transform: translate(0, -3px); }
  30% { transform: translate(-2px, 2px); }
  40% { transform: translate(1px, 1px); }
  50% { transform: translate(-3px, -1px); }
  60% { transform: translate(0, 3px); }
  70% { transform: translate(3px, -2px); }
  80% { transform: translate(-1px, -2px); }
  90% { transform: translate(1px, 3px); }
}

/* Game container glitch effect */
.game-glitch {
  position: relative;
  overflow: hidden;
  animation: flicker 0.3s infinite steps(1);
}

/* Base noise pattern */
.game-glitch::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: 50px 50px;
  opacity: 0.15;
  mix-blend-mode: overlay;
  pointer-events: none;
  z-index: 2;
  animation: noise-anim 0.2s steps(8) infinite;
}

/* Shifting overlay */
.game-glitch::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    180deg,
    transparent 0%,
    rgba(32, 128, 255, 0.2) 2%,
    rgba(32, 128, 255, 0.1) 3%,
    rgba(32, 128, 255, 0.1) 3%,
    transparent 3.5%,
    transparent 9%,
    rgba(32, 128, 255, 0.2) 9.5%,
    rgba(32, 128, 255, 0.1) 10%,
    transparent 10.5%,
    transparent 20%,
    rgba(32, 128, 255, 0.2) 20.5%,
    rgba(32, 128, 255, 0.1) 21%,
    transparent 21.5%,
    transparent 30%,
    rgba(32, 128, 255, 0.2) 30.5%,
    rgba(32, 128, 255, 0.1) 31%,
    transparent 31.5%,
    transparent 65%,
    rgba(32, 128, 255, 0.2) 65.5%,
    rgba(32, 128, 255, 0.1) 66%,
    transparent 66.5%,
    transparent 80%,
    rgba(32, 128, 255, 0.2) 80.5%,
    rgba(32, 128, 255, 0.1) 81%,
    transparent 81.5%,
    transparent 99%,
    rgba(32, 128, 255, 0.2) 99.5%,
    rgba(32, 128, 255, 0.1) 100%
  );
  z-index: 3;
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Moving scan line */
.game-glitch .scan-line {
  position: absolute;
  width: 100%;
  height: 5px;
  background: rgba(0, 255, 255, 0.1);
  z-index: 4;
  animation: scan-line 4s linear infinite;
  pointer-events: none;
}

/* Pixel block errors */
.pixel-error {
  position: absolute;
  background: rgba(0, 255, 234, 0.3);
  z-index: 3;
  animation: pixel-shift 0.4s steps(2) infinite;
  pointer-events: none;
}

/* Color artifacts */
.glitch-artifact {
  position: absolute;
  z-index: 4;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.1s;
  mix-blend-mode: screen;
}

/* Red channel glitch */
.glitch-artifact.red {
  background: rgba(255, 0, 76, 0.4);
  animation: pixel-shift 0.3s steps(2) infinite;
}

/* Green channel glitch */
.glitch-artifact.green {
  background: rgba(0, 255, 76, 0.4);
  animation: pixel-shift 0.33s steps(2) infinite;
}

/* Blue channel glitch */
.glitch-artifact.blue {
  background: rgba(76, 0, 255, 0.4);
  animation: pixel-shift 0.36s steps(2) infinite;
}

.game-glitch .glitch-artifact {
  opacity: 1;
}

/* Individual tile glitch effect */
.tile.glitch {
  position: relative;
  overflow: hidden;
  animation: glitch-skew 0.3s infinite alternate-reverse;
}

/* Offset text shadows for tiles */
.tile.glitch::before,
.tile.glitch::after {
  content: attr(data-number);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  line-height: 50px;
  background: inherit;
}

.tile.glitch::before {
  color: #ff009c;
  left: 2px;
  text-shadow: -1px 0 #00ffea;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  animation: glitch-text 0.4s infinite alternate-reverse;
  z-index: 1;
}

.tile.glitch::after {
  color: #00ffea;
  left: -2px;
  text-shadow: 1px 0 #ff009c;
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
  animation: glitch-text 0.4s infinite alternate-reverse;
  animation-delay: 0.15s;
  z-index: 1;
}

/* More extreme text distortion */
@keyframes glitch-text {
  0% {transform: translate(0); }
  10% {transform: translate(-2px, 2px); }
  20% {transform: translate(-4px, -2px); }
  30% {transform: translate(2px, 4px); }
  40% {transform: translate(3px, -3px); }
  50% {transform: translate(-3px, 1px); }
  60% {transform: translate(0, 3px); }
  70% {transform: translate(3px, -2px); }
  80% {transform: translate(-1px, -2px); }
  90% {transform: translate(1px, 3px); }
  100% {transform: translate(0); }
}

/* Occasional flicker effect */
.flicker {
  animation: flicker 0.5s step-end infinite alternate;
}

/* Bad reception static overlay */
.static-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
